package presentation.mainui;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Graphics;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JCheckBox;
import javax.swing.JButton;

public class SettingsFrame {

	private JFrame frame;
	JCheckBox chckbxNewCheckBox;
	JComboBox<String> comboBox;

	/**
	 * Launch the application.
	 */

	/**
	 * Create the application.
	 */
	public SettingsFrame() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frame = new JFrame();
		frame.setBounds(100, 100, 364, 247);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		frame.setUndecorated(true);
		frame.setBackground(new Color(0, 0, 0, 0));

		JPanel panel = new MyPanel();
		panel.setBounds(0, 0, 348, 209);
		frame.getContentPane().add(panel);
		panel.setLayout(null);

		String[] str = new String[] { "横向消除", "竖向消除" };
		comboBox = new JComboBox<String>(str);
		comboBox.setBounds(166, 53, 97, 21);
		panel.add(comboBox);

		JLabel lblNewLabel = new MyLabel("消除方向");
		lblNewLabel.setBounds(34, 56, 54, 15);
		panel.add(lblNewLabel);

		JLabel lblNewLabel_1 = new MyLabel("声音");
		lblNewLabel_1.setBounds(34, 110, 54, 15);
		panel.add(lblNewLabel_1);

	    chckbxNewCheckBox = new JCheckBox("开闭声音");
		chckbxNewCheckBox.setBounds(166, 106, 103, 23);
		chckbxNewCheckBox.setOpaque(false);
		chckbxNewCheckBox.setForeground(Color.white);
		panel.add(chckbxNewCheckBox);

		final JButton btnNewButton = new JButton("保存设置");
		btnNewButton.setBounds(113, 156, 93, 23);
		btnNewButton.setBorder(null);
		btnNewButton.setContentAreaFilled(false);
		btnNewButton.setOpaque(false);
		btnNewButton.setForeground(Color.white);
		btnNewButton.addMouseListener(new MouseListener() {

			@Override
			public void mouseClicked(MouseEvent e) {
				// TODO Auto-generated method stub

			}

			@Override
			public void mousePressed(MouseEvent e) {
				// TODO Auto-generated method stub

			}

			@Override
			public void mouseReleased(MouseEvent e) {
				// TODO Auto-generated method stub
				File file=new File("settings.dat");
				if(file.exists()){
					try {
						FileWriter fw=new FileWriter(file);
						String settings="";
						if(chckbxNewCheckBox.isSelected()){
							settings=comboBox.getSelectedItem()+" "+true;
						}
						else{
							settings=comboBox.getSelectedItem()+" "+false;
						}
						fw.write(cbuf);
					} catch (IOException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
				}
				else{
					try {
						file.createNewFile();
					} catch (IOException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
				}
				frame.dispose();
			}

			@Override
			public void mouseEntered(MouseEvent e) {
				// TODO Auto-generated method stub
				btnNewButton.setCursor(new Cursor(Cursor.HAND_CURSOR));
				btnNewButton.setForeground(new Color(36, 85, 141));
			}

			@Override
			public void mouseExited(MouseEvent e) {
				// TODO Auto-generated method stub
				btnNewButton.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
				btnNewButton.setForeground(Color.white);
			}

		});
		panel.add(btnNewButton);

		frame.setLocationRelativeTo(null);
		panel.repaint();
		frame.setVisible(true);
	}

	public class MyPanel extends JPanel {

		/**
		 * 
		 */
		private static final long serialVersionUID = 1L;

		public void paintComponent(Graphics g) {
			g.setColor(Color.black);
			g.fillRoundRect(0, 0, getWidth() - 1, getHeight() - 1, 10, 10);
		}

	}
}
