package presentation.gameresultui;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Timer;
import java.util.TimerTask;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JPanel;

public class resultGUI {
	static JPanel cspanel=new JPanel();;
static JFrame frame;
static JLayeredPane layeredpane ;
static int frameweight=600;
	static int frameheight=400;
static int time=0;
static int[] grade;
static JLabel[] gradelabel;

public resultGUI(){
	
	frame = new JFrame();
	frame.setSize(frameweight, frameheight);
	frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	frame.getContentPane().setLayout(null);
	//frame.setUndecorated(true);
	//frame.setBackground(new Color(0, 0, 0, 0));
	
    layeredpane = new JLayeredPane(); // 重要
	layeredpane.setBounds(0, 0, frame.getWidth(), frame.getHeight());
	layeredpane.setLayout(null);
	layeredpane.setOpaque(false);
	frame.add(layeredpane);
	//背景添加 
	 ImageIcon bgimage=new ImageIcon("src/bin/largeground.jpg");
	 JLabel bglabel=new JLabel(bgimage);
	 JPanel bgpanel=new JPanel();
	 bgpanel.setLayout(null);
	 bgpanel.setBounds(0,0,frameweight, frameheight);
	 bglabel.setBounds(0, 0, frameweight, frameheight);
	 bgpanel.add(bglabel);
	 layeredpane.add(bgpanel,new Integer(10));
	 
	
	
	frame.setVisible(true);
		
}
public static void showtime(final int[] gradeinput){
	final JPanel endshow=new JPanel();
 final Timer timer=new Timer(true);

	timer.schedule(new TimerTask(){

		@Override
		public void run() {
			// TODO Auto-generated method stub
			time++;
			System.out.println(time+"B");
			if(time<=10){
				congraduateShow();
				frame.repaint();
				frame.validate();
				
			}else{
				layeredpane.remove(cspanel);
				//jumpshow();
				timer.cancel();
				frame.repaint();
				frame.validate();
			}
		}
		
	}, 0,300);
 final Timer gradetimer=new Timer(true);

	gradetimer.schedule(new TimerTask(){

		@Override
		public void run() {
			// TODO Auto-generated method stub
			
			System.out.println(time+"A"); 
			if(time<=100&&time>10){
				for(int i=0;i<gradeinput.length;i++){
					grade[i]=gradeinput[i]*(time-10)/90;
					gradelabel[i].setText("      "+grade[i]);
				}
				frame.repaint();
				frame.validate();
				time++;
			}else if(time>100){
				layeredpane.remove(cspanel);
				jumpshow();
				timer.cancel();
			    gradetimer.cancel();
				frame.repaint();
				frame.validate();
				time++;
			}
		}
		
	}, 0,50);
}
public static void congraduateShow(){
     cspanel.removeAll();
     
	cspanel.setSize(frameweight, frameheight);
	cspanel.setOpaque(false);
	cspanel.setLayout(null);
	
	String imageName="src/bin/"+time%3+".jpg";
	
	ImageIcon image=new ImageIcon(imageName);
	
	JLabel label=new JLabel(image);
	label.setBounds(0,0,frameweight,frameheight);
	cspanel.add(label);
	layeredpane.add(cspanel,new Integer(200));
	
}

public static void jumpshow(){
	
	JPanel jumppanel=new JPanel();
	 jumppanel.setLayout(null);
	
	 jumppanel.setBounds(frameweight/2-30, frameheight-120, 60, 60 );
	 ImageIcon image=new ImageIcon("src/bin/jump.jpg");
	 JButton button=new JButton(image);
	 button.setBounds(0,0,60,60);
	 button.addActionListener(new ActionListener(){

		@Override
		public void actionPerformed(ActionEvent e) {
			// TODO Auto-generated method stub
			
		}
		
	 
	 });
	jumppanel.add(button);
	layeredpane.add(jumppanel,new Integer(100));
	jumppanel.setOpaque(false);	
}
public void gameInfo(int playernumber,int[] playergrade,String[] playerName,String[] playerPhoto){
	grade=new int[playernumber];
	gradelabel=new JLabel[playernumber];
	for(int j=0;j<playernumber;j++){
		grade[j]=0;
		gradelabel[j]=new JLabel("      "+0);
	}
	for(int i=0;i<playernumber;i++){
	    ImageIcon image=new ImageIcon("src/bin/"+playerPhoto[i]);
		JLabel bglabel=new JLabel(image);
		bglabel.setSize(frameweight/(playernumber+1),frameheight/3);
	    JPanel panel=new JPanel(); 
	    panel.setLayout(null);
		panel.setBounds(frameweight/(playernumber+1)*i+frameweight/(playernumber+1)/ (playernumber+1)*(i+1),frameheight/8, frameweight/(playernumber+1), frameheight/3);
		panel.add(bglabel);
		panel.setOpaque(false);
		JPanel panel1=new JPanel();
		panel1.setLayout(null);
		panel1.setBounds(frameweight/(playernumber+1)*i+frameweight/(playernumber+1)/ (playernumber+1)*(i+1),frameheight/8*4, 250, 40);
		panel1.setOpaque(false);
		JLabel playernamelabel=new JLabel(playerName[i]);
		 gradelabel[i].setText("       "+grade[i]);
		gradelabel[i].setFont(new Font("Rosewood Std 粗体",Font.PLAIN,28));
		//playernamelabel.setBounds(30, 80, 70, 20);
		gradelabel[i].setBounds(0, 0, 250, 40);
		panel1.add(gradelabel[i]);
		//panel.add(playernamelabel);
		layeredpane.add(panel,new Integer(20));
		layeredpane.add(panel1,new Integer(20));
	}
}

public static void main(String arg[]){
	resultGUI resultgui=new resultGUI();
	int[] playergrade={25500,35000};
	String[] playerName={"李隆隆","马超"};
	String[] playerPhoto={"photo1.jpg","photo2.jpg"};
	resultgui.gameInfo(2,playergrade,playerName,playerPhoto);
	showtime(playergrade);
	
}
}
