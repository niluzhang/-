package presentation.gameui;
/*
 * *
 * 添加了gradetimer  程序
 */
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Image;
import java.util.Timer;
import java.util.TimerTask;

import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JProgressBar;

public class collaborationGameGUI_timepane extends collaborationGameGUI {
	public void initlizeTimepane() {
		// timepanel的初始化
		final TimePanel timepanel = new TimePanel();
		timepanel.setBounds(520, 35, 70, 515);
		timepanel.setOpaque(false);
		// timepanel.setBackground(Color.orange);
		pane.add(timepanel);
		timejpb = new JProgressBar();
		timejpb.setStringPainted(true);
		timejpb.setBackground(new Color(55, 58, 77));
		timejpb.setPreferredSize(new Dimension(35, 300));
		timejpb.setOrientation(JProgressBar.VERTICAL);
		JLabel timelabel1 = new JLabel(" ");
		timelabel1.setFont(new Font("微软雅黑", Font.PLAIN, 16));
		timelabel1.setPreferredSize(new Dimension(50, 30));
		timepanel.add(timelabel1);
		JLabel timelabel2 = new JLabel("  游戏");
		timelabel2.setFont(new Font("微软雅黑", Font.PLAIN, 16));
		timelabel2.setPreferredSize(new Dimension(50, 30));
		timepanel.add(timelabel2);
		JLabel timelabel = new JLabel("  时间");
		timelabel.setFont(new Font("微软雅黑", Font.PLAIN, 16));
		timelabel.setPreferredSize(new Dimension(50, 30));
		timepanel.add(timelabel);
		final JLabel timelabel3 = new JLabel("   " + time);
		timelabel3.setFont(new Font("微软雅黑", Font.PLAIN, 16));
		timelabel3.setPreferredSize(new Dimension(50, 20));
		timepanel.add(timelabel3);
		timepanel.add(timejpb);

		timejpb.setMaximum(time );
		 //计时器的启动必须等待通信的建立完成，并且使双方的时间保持一致
		doublehitCount = 0; // 同时连击数目初始化
		
		timeCaulater = new Timer(true);
		doublehitState = false;
		
		// System.out.println("DDD");
		timeCaulater.schedule(new TimerTask() {

			@Override
			public void run() {
				// TODO Auto-generated method stub
				frame.repaint();
				frame.validate();
				timejpb.setValue(time);
				timelabel3.setText("   " + time);
				// timejpb.setToolTipText(""+time);
				
				if (time<= 0) {
					gradetimer.cancel();
					
					timeCaulater.cancel();
					updatethread.stop();
					JOptionPane.showMessageDialog(frame, "游戏结束:send:"+sendnumber+",receive:"+receivenumber);
				}
			}

		}, 0, 10);
		
		
	}

	class TimePanel extends JPanel {
		private static final long serialVersionUID = 1L;

		@Override
		public void paintComponent(Graphics g) {
			// super.paint(g);
			// g.drawString("时间轴", 0, 10);
			java.net.URL imgurl = collaborationGameGUI.class
					.getResource("/bin/backgound.gif");
			Image image = new ImageIcon(imgurl).getImage();
			g.drawImage(image, 0, 0, this.getWidth(), this.getHeight(), this);

		}
	}
}
